{"version":3,"sources":["webpack:///./node_modules/terra-dev-site/lib/loader-components/_NpmBadge.js","webpack:///./node_modules/terra-dev-site/lib/loader-components/NpmBadge.module.scss?1d27","webpack:///./packages/terra-application-navigation/package.json","webpack:///./packages/terra-application-navigation/lib/terra-dev-site/doc/application-navigation/Utils.3.doc.mdx"],"names":["Object","defineProperty","exports","value","default","_react","_interopRequireDefault","_propTypes","_bind","_NpmBadgeModule","obj","__esModule","cx","bind","propTypes","name","string","isRequired","url","version","NpmBadge","_ref","createElement","className","href","concat","_default","module","Badge","layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"6FAEAA,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIC,EAASC,EAAuB,EAAQ,IAExCC,EAAaD,EAAuB,EAAQ,IAE5CE,EAAQF,EAAuB,EAAQ,IAEvCG,EAAkBH,EAAuB,EAAQ,OAErD,SAASA,EAAuBI,GAAO,OAAOA,GAAOA,EAAIC,WAAaD,EAAM,CAAEN,QAASM,GAEvF,IAAIE,EAAKJ,EAAMJ,QAAQS,KAAKJ,EAAgBL,SAExCU,EAAY,CAIdC,KAAMR,EAAWH,QAAQY,OAAOC,WAKhCC,IAAKX,EAAWH,QAAQY,OAKxBG,QAASZ,EAAWH,QAAQY,OAAOC,YAGjCG,EAAW,SAAkBC,GAC/B,IAAIN,EAAOM,EAAKN,KACZG,EAAMG,EAAKH,IACXC,EAAUE,EAAKF,QACnB,OAAOd,EAAOD,QAAQkB,cAAc,MAAO,CACzCC,UAAWX,EAAG,oBACbP,EAAOD,QAAQkB,cAAc,IAAK,CACnCC,UAAWX,EAAG,SACdY,KAAMN,GAAO,iCAAiCO,OAAOV,EAAM,OAAOU,OAAON,IACxEd,EAAOD,QAAQkB,cAAc,OAAQ,CACtCC,UAAWX,EAAG,eACbM,EAAM,UAAY,OAAQb,EAAOD,QAAQkB,cAAc,OAAQ,CAChEC,UAAWX,EAAG,kBACb,IAAIa,OAAON,OAGhBC,EAASN,UAAYA,EACrB,IAAIY,EAAWN,EACflB,EAAQE,QAAUsB,G,qBCrDlBC,EAAOzB,QAAU,CAAC,MAAQ,iCAAiC,kBAAkB,2CAA2C,aAAa,sCAAsC,gBAAgB,2C,kCCD3L,yEAGa0B,EAAQ,SAAC,GAAD,IAAGV,EAAH,EAAGA,IAAH,OACf,kBAAC,IAAD,CACEH,KAAK,+BACLI,QAAQ,SACRD,IAAKA,M,iJCKPW,EAAc,GAIL,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,sBACD,OAAO,cALS,UAKT,OAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAE5E,cAAC,IAAD,CAAOA,QAAQ,UACf,mBAAQ,CACN,GAAM,gCADR,gCAGA,qNACA,wBACE,oBAAIC,WAAW,MAAK,wBAAQA,WAAW,MAAnB,aAApB,kHACA,oBAAIA,WAAW,MAAK,wBAAQA,WAAW,MAAnB,WAApB,sGAEF,mBAAQ,CACN,GAAM,aADR,aAGA,wBACE,oBAAIA,WAAW,MAAK,wBAAQA,WAAW,MAAnB,uBAApB,wCAAqH,wBAAQA,WAAW,MAAnB,eAArH,UACA,oBAAIA,WAAW,MAAK,wBAAQA,WAAW,MAAnB,sBAApB,wCAAoH,wBAAQA,WAAW,MAAnB,cAApH,UACA,oBAAIA,WAAW,MAAK,wBAAQA,WAAW,MAAnB,2BAApB,wCAAyH,wBAAQA,WAAW,MAAnB,mBAAzH,UACA,oBAAIA,WAAW,MAAK,wBAAQA,WAAW,MAAnB,wBAApB,wCAAsH,wBAAQA,WAAW,MAAnB,gBAAtH,UACA,oBAAIA,WAAW,MAAK,wBAAQA,WAAW,MAAnB,0BAApB,wCAAwH,wBAAQA,WAAW,MAAnB,kBAAxH,WAEF,mBAAQ,CACN,GAAM,WACL,wBAAQA,WAAW,MAAnB,YACH,wBACE,oBAAIA,WAAW,MAAK,wBAAQA,WAAW,MAAnB,iCAApB,6EAAoK,wBAAQA,WAAW,MAAnB,WAApK,wHAMNJ,EAAWK,gBAAiB","file":"283-47e5ee17f3e9ead0a651.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _bind = _interopRequireDefault(require(\"classnames/bind\"));\n\nvar _NpmBadgeModule = _interopRequireDefault(require(\"./NpmBadge.module.scss\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar cx = _bind.default.bind(_NpmBadgeModule.default);\n\nvar propTypes = {\n  /**\n   * component name.\n   */\n  name: _propTypes.default.string.isRequired,\n\n  /**\n   * url to link to\n   */\n  url: _propTypes.default.string,\n\n  /**\n   * The package version.\n   */\n  version: _propTypes.default.string.isRequired\n};\n\nvar NpmBadge = function NpmBadge(_ref) {\n  var name = _ref.name,\n      url = _ref.url,\n      version = _ref.version;\n  return _react.default.createElement(\"div\", {\n    className: cx('badge-container')\n  }, _react.default.createElement(\"a\", {\n    className: cx('badge'),\n    href: url || \"https://www.npmjs.org/package/\".concat(name, \"/v/\").concat(version)\n  }, _react.default.createElement(\"span\", {\n    className: cx('badge-name')\n  }, url ? 'package' : 'npm'), _react.default.createElement(\"span\", {\n    className: cx('badge-version')\n  }, \"v\".concat(version))));\n};\n\nNpmBadge.propTypes = propTypes;\nvar _default = NpmBadge;\nexports.default = _default;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"badge\":\"NpmBadge-module__badge___3p041\",\"badge-container\":\"NpmBadge-module__badge-container___2W9ft\",\"badge-name\":\"NpmBadge-module__badge-name___2TNAy\",\"badge-version\":\"NpmBadge-module__badge-version___3bRIz\"};","import React from 'react';\nimport NpmBadge from 'terra-dev-site/lib/loader-components/_NpmBadge';\n\nexport const Badge = ({ url }) => (\n      <NpmBadge\n        name=\"terra-application-navigation\"\n        version=\"1.25.0\"\n        url={url}\n      />\n    );","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { Badge } from 'terra-application-navigation/package.json?dev-site-package';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Badge mdxType=\"Badge\" />\n    <h1 {...{\n      \"id\": \"terra-application-navigation\"\n    }}>{`Terra Application Navigation`}</h1>\n    <p>{`In addition to the ApplicationNavigation component, the package contains additional utility functions that contain a variety of helper functions and prop type declarations. Included are:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`propTypes`}</strong>{` - An object containing prop type definitions for the configuration objects used by the ApplicationNavigation.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`helpers`}</strong>{` - An object containing helper functions to aid in the creation of ApplicationNavigation content.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"proptypes\"\n    }}>{`propTypes`}</h2>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`titleConfigPropType`}</strong>{` - Shape for ApplicationNavigation's `}<strong parentName=\"li\">{`titleConfig`}</strong>{` prop.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`userConfigPropType`}</strong>{` - Shape for ApplicationNavigation's `}<strong parentName=\"li\">{`userConfig`}</strong>{` prop.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`navigationItemsPropType`}</strong>{` - Shape for ApplicationNavigation's `}<strong parentName=\"li\">{`navigationItems`}</strong>{` prop.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`utilityItemsPropType`}</strong>{` - Shape for ApplicationNavigation's `}<strong parentName=\"li\">{`utilityItems`}</strong>{` prop.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`extensionItemsPropType`}</strong>{` - Shape for ApplicationNavigation's `}<strong parentName=\"li\">{`extensionItems`}</strong>{` prop.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"helpers\"\n    }}><strong parentName=\"h2\">{`helpers`}</strong></h2>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`shouldRenderCompactNavigation`}</strong>{` - A function that determines whether or not the given size is considered `}<strong parentName=\"li\">{`compact`}</strong>{` or not. This can be used to synchronize component rendering with responsive changes to the ApplicationNavigation.`}</li>\n    </ul>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}